#!/usr/bin/env python3

# This file is part of pyrddl.

# pyrddl is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# pyrddl is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with pyrddl. If not, see <http://www.gnu.org/licenses/>.


from pyrddl.parser import RDDLParser


import argparse
import numpy as np
import time


def parse_args():
    description = 'RDDL lexer/parser in Python3.'
    parser = argparse.ArgumentParser(description=description)
    parser.add_argument('rddl', type=str, help='RDDL filepath')
    parser.add_argument(
        '-v', '--verbose',
        action='store_true',
        help='verbosity mode'
    )
    return parser.parse_args()


def read_file(path):
    with open(path, 'r') as f:
        return f.read()


def print_domain_information(rddl, verbose=False):
    print('*********************************************************')
    print(' RDDL domain = {}'.format(rddl.domain.name))
    print('*********************************************************')
    print()


def print_non_fluents_information(rddl, verbose=False):
    print('*********************************************************')
    print(' RDDL non-fluents = {}'.format(rddl.non_fluents.name))
    print('*********************************************************')
    print()


def print_instance_information(rddl, verbose=False):
    print('*********************************************************')
    print(' RDDL non-fluents = {}'.format(rddl.instance.name))
    print('*********************************************************')
    print()


if __name__ == '__main__':

    # parser CLI arguments
    args = parse_args()

    # read RDDL file
    rddl = read_file(args.rddl)

    # buid parser
    parser = RDDLParser()
    parser.build()

    # parse RDDL
    rddl = parser.parse(rddl)

    # print RDDL
    print_domain_information(rddl)
    print_non_fluents_information(rddl)
    print_instance_information(rddl)
